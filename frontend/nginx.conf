# frontend/nginx.conf

# Gzip compression for static assets
gzip on;
gzip_vary on;
gzip_comp_level 6;
gzip_min_length 1024;
gzip_proxied any;
gzip_types
  text/plain
  text/css
  text/xml
  text/javascript
  application/json
  application/javascript
  application/xml+rss
  application/atom+xml
  image/svg+xml
  application/manifest+json
  font/ttf
  font/otf
  application/vnd.ms-fontobject
  application/font-woff
  application/font-woff2;

# Rate limiting for API endpoints
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;

# Map for Connection header upgrade handling (WebSockets)
map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

server {
  listen 80;
  server_tokens off;
  server_name _;

  # Serve the built Vite app
  root /usr/share/nginx/html;
  index index.html;

  # Security headers (applied to all responses)
  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header Referrer-Policy "strict-origin-when-cross-origin" always;
  add_header X-XSS-Protection "1; mode=block" always;

  # --- API proxy (same-origin) ---
  # All /api/* requests are proxied to the backend container
  location /api/ {
    # Apply rate limiting to API requests
    limit_req zone=api burst=20 nodelay;
    
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # WebSocket support
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    # Proxy to backend container
    proxy_pass http://quizzical-backend:8000;

    # Timeouts for quiz generation and polling
    proxy_connect_timeout 60s;
    proxy_send_timeout    60s;
    proxy_read_timeout    60s;

    # Buffering settings for better performance
    proxy_buffering on;
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;

    # Prevent nginx from changing Location headers
    proxy_redirect off;
  }

  # --- Web App Manifest with correct MIME type ---
  location = /manifest.webmanifest {
    add_header Content-Type "application/manifest+json" always;
    add_header Cache-Control "public, max-age=86400" always;
    add_header Vary "Accept-Encoding" always;
    
    # CORS headers for manifest (some browsers require this)
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS" always;
    
    try_files $uri =404;
  }

  # --- PWA and App Icons ---
  location ~ ^/(favicon\.ico|apple-touch-icon.*\.png|android-chrome-.*\.png|mstile-.*\.png)$ {
    add_header Cache-Control "public, max-age=2592000" always; # 30 days
    add_header Vary "Accept-Encoding" always;
    try_files $uri =404;
  }

  # --- Logo and brand assets ---
  location = /logo.svg {
    add_header Content-Type "image/svg+xml" always;
    add_header Cache-Control "public, max-age=604800" always; # 7 days
    add_header Vary "Accept-Encoding" always;
    try_files $uri =404;
  }

  # --- Static assets with long-term caching (Vite hashed filenames) ---
  location ~* \.(?:js|mjs|css|map)$ {
    access_log off;
    add_header Cache-Control "public, max-age=31536000, immutable" always;
    add_header Vary "Accept-Encoding" always;
    expires 1y;
    try_files $uri =404;
  }

  # --- Images and media files ---
  location ~* \.(?:png|jpg|jpeg|gif|webp|avif|ico|svg)$ {
    access_log off;
    add_header Cache-Control "public, max-age=2592000" always; # 30 days
    add_header Vary "Accept-Encoding" always;
    expires 30d;
    try_files $uri =404;
  }

  # --- Font files ---
  location ~* \.(?:woff2?|ttf|eot|otf)$ {
    access_log off;
    add_header Cache-Control "public, max-age=31536000, immutable" always;
    add_header Access-Control-Allow-Origin "*" always;
    add_header Vary "Accept-Encoding" always;
    expires 1y;
    try_files $uri =404;
  }

  # --- Other static assets ---
  location ~* \.(?:xml|txt|pdf|doc|docx)$ {
    add_header Cache-Control "public, max-age=86400" always;
    add_header Vary "Accept-Encoding" always;
    try_files $uri =404;
  }

  # --- Health check endpoint (for load balancers) ---
  location = /health {
    access_log off;
    add_header Content-Type "text/plain" always;
    return 200 "healthy\n";
  }

  # --- Robots.txt ---
  location = /robots.txt {
    add_header Content-Type "text/plain" always;
    add_header Cache-Control "public, max-age=86400" always;
    try_files $uri =404;
  }

  # --- SPA fallback for all other routes ---
  # This must be last to catch all unmatched routes
  location / {
    # No caching for the main HTML file to ensure updates are picked up
    add_header Cache-Control "no-store, no-cache, must-revalidate" always;
    add_header Pragma "no-cache" always;
    add_header Expires "0" always;

    # Try to serve the requested file, then fallback to index.html for SPA routing
    try_files $uri $uri/ /index.html;
  }

  # --- Error pages ---
  error_page 404 /index.html;
  error_page 500 502 503 504 /50x.html;
  
  location = /50x.html {
    root /usr/share/nginx/html;
    internal;
  }

  # --- Additional security ---
  # Deny access to hidden files
  location ~ /\. {
    deny all;
    access_log off;
    log_not_found off;
  }

  # Deny access to backup files
  location ~ ~$ {
    deny all;
    access_log off;
    log_not_found off;
  }
}
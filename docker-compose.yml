# =============================================================================
# Quizzical AI - Local Development (Docker Compose)
# Run:   docker compose up --build
# Stop:  docker compose down
# =============================================================================

services:
  # ---------------------------------------------------------------------------
  # Frontend (React + Nginx)
  # ---------------------------------------------------------------------------
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: quizzical-frontend
    env_file:
      - ./.env              # global defaults
      - ./frontend/.env     # frontend-specific overrides
    ports:
      - "3000:80"           # Host 3000 -> Container 80 (Nginx)
    depends_on:
      backend:
        condition: service_started
    networks:
      - quizzical-network

  # ---------------------------------------------------------------------------
  # Backend (FastAPI)
  # ---------------------------------------------------------------------------
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: quizzical-backend
    env_file:
      - ./.env              # global defaults
      - ./backend/.env      # backend-specific overrides (wins if conflicts)
    environment:
      # Compose service discovery
      DATABASE__HOST: db
      REDIS__HOST: redis

      # --- App profile & logging (dev-friendly) ---
      APP_ENVIRONMENT: local
      LOG_PROFILE: trace
      LOG_LEVEL_ROOT: DEBUG
      LOG_LEVEL_APP: DEBUG
      LOG_LEVEL_LIBS: DEBUG

      # LLM SDK verbosity (dev)
      OPENAI_LOG: debug
      LITELLM_LOG: DEBUG
      LITELLM_DEBUG: "1"
      LITELLM_VERBOSE: "1"
      ENABLE_JSON_SCHEMA_VALIDATION: "1"
      LOG_TO_FILE: "true"  
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./backend:/app      # hot reload/dev (overlays source into container)
      - ./logs:/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    networks:
      - quizzical-network

  # ---------------------------------------------------------------------------
  # Postgres (pgvector)
  # ---------------------------------------------------------------------------
  db:
    image: pgvector/pgvector:0.8.0-pg16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: quiz
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./backend/db/init:/docker-entrypoint-initdb.d:ro
    networks:
      - quizzical-network

  # ---------------------------------------------------------------------------
  # Redis (dev)
  # ---------------------------------------------------------------------------
  redis:
    image: redis:8-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    # Bind to loopback to avoid broad exposure on host
    ports:
      - "127.0.0.1:6379:6379"
    networks:
      - quizzical-network
    # Optional (dev-only) perf tweak:
    # command: ["redis-server", "--save", "", "--appendonly", "no"]

# =============================================================================
# Networks
# =============================================================================
networks:
  quizzical-network:
    driver: bridge

# =============================================================================
# Volumes
# =============================================================================
volumes:
  pgdata:
